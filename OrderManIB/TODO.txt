
-----------------------------------------------------------------------------------------

contract mapping + pick lot size from NSE file. separate script/bat to download it from NSE
    https://www.nseindia.com/content/fo/fo_mktlots.csv
    Fut contracts can be named as symbol1
    modify in settings
    can also take expiry month from it with some mapping

Add GUI + afl I/O
    GUI - Entry/Stop/Current Target price + scrip name - just labels
        - Background color for direction
        - X returns for current Stop/Target
        - Trade qty + editable parts qty +  vs ideal risk in ratio + as ratio of trading capital
        - All trades current status
        - Button to send order - same for create or update
        - Filled sizes        
        - show status + qty
        - sync with open chart  - no need for tabs

Get absolute basics done to create order. Other less imp as we can modify order from IB charts too 
Order linking - check api  
Log to csv
    Save everything as Trade log csv
    Add row to csv on trade close
    Also use it load orders on restart - load AB thru static vars + load python through csv
-----------------------------------------------------------------------------------------










Position    
    - output + update on trade update + update IB objects
    - clear on trade complete/cancel
    - error if trade already exists for scrip
-----------------------------------------------------------------------------------------
Stop order - instead of market order use market Limit with very wide stop - ex at 1x distance
---------- 
Current Price vs order Validations  // ex buy stop should be above current price etc
----------------------------------------------------------------------------------------- 

# modify 
    # cannot modify executed orders 
    # modify target orders ? 
    # def modify( self, qty:int, entryPrice:float, stopPrice:float ) : 
    # def placeExitAtBAMiddle

    # https://interactivebrokers.github.io/tws-api/order_submission.html
    # openOrder callback
    # orderStatus callback   IBApi.EWrapper.execDetails ? 
    # reqOpenOrders or reqAllOpenOrders 
 
# Modify Order - same call - must have same order id

# Cancel Order
    # self.cancelOrder(self.simplePlaceOid)
    # self.reqGlobalCancel()
    
# Manage Target Orders - Move Trail target to 2x + large increment to say 10x after T1 hits    
    - For T2, Modify existing target order
        - Set starting price as Target 2 price
        - Set large increment again for dummy target (trailing position)
        - set Initial  component size = T1(filled) + T2
        - set Subsequent Component size to Total size - Initial Component size
    - Do not cancel Target order as it has OCA with Stop order and could not delete OCA group from gui         
    - Allow moving target ( ex before BRN )

# Read Orders/update on status change -  reqAllOpenOrders() ? 

# remove amoumt columns from tradelog
 


# reqContractDetails() to get front month - do only once - or maybe only on expiry based on last contract
# get contract details
    # Futures - contract month. Set group ID for each scrip. All scrips within a group share contact month
    # Tick Size
        # marketRuleIds? - can be used to determine the minimum price increment at a given price - returns 11 for both SBIN and NIFTY
        # minTickSize is not reliable? https://stackoverflow.com/questions/30375358/issues-reading-mintick-from-interactive-brokers-java-api
        # Done thru this - https://interactivebrokers.github.io/tws-api/minimum_increment.html    
    # Futures - contract lot size ?
        # https://interactivebrokers.github.io/tws-api/classIBApi_1_1ContractDetails.html
        # Through evMultiplier?  but returns 0
        # MdSizeMultiplier? Returns 1



# Close position - check algos 
    # Pegged-to-Midpoint Orders  - not supported on NSE ? 
    # Snap to Midpoint Orders - does not move if price moves. supported
    # check relative/pegged to primary orders 
    # https://www.interactivebrokers.co.in/en/index.php?f=613
    # request positions.  In callback close the position 
    # “Snap to Midpoint” is one of the order types that can help platform users trade within the spread. 
    # Others are Adaptive Algo, Relative, Pegged-to-Midpoint, and Limit order
    # so manual exits can either be simple Limit orders after sharp move against or B/A based exit( instead of market orders )
    # https://financefeeds.com/interactive-brokers-adds-snap-orders-mosaic-order-entry-panel-tws/
    # https://www.elitetrader.com/et/threads/ib-order-types-pegged-to-primary-relative-orders.45686/
    # check does hiding order size help ? 
    # https://www.interactivebrokers.co.in/en/index.php?f=4985
    # Adaptive ? https://www.interactivebrokers.com/en/index.php?f=19091
        
#########
# IB already has logging in its code - check how to enable/disable
# Time limit - close position at time ? 
# Margin checks
    # https://interactivebrokers.github.io/tws-api/order_conditions.html
    # account balance  -  https://interactivebrokers.github.io/tws-api/account_summary.html  -   self.reqAccountSummary(9002, "All", "$LEDGER")
# Allow adds

# For examples - see manual.py in IB tests

 

----------------------------------------------------------------------------------------------------------------------------
Rentry Support ?
    Can link with original trade and use same 1X distance. May have to move from csv to json/db or just add parent field
    Stop can be automatically picked behind shakeout spike within last few bars
    So can use it on CBP like spike against that closes well as a pin bar or better
Reconcile with contract notes + expenses    
check - Import from gmail 
    can forward contract notes to dummy email address 
    read from inbox and move to folder
    save all contract logs

